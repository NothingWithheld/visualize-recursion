"use strict";var _slicedToArray=function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,n){var c=[],i=!0,t=!1,r=void 0;try{for(var a,o=e[Symbol.iterator]();!(i=(a=o.next()).done)&&(c.push(a.value),!n||c.length!==n);i=!0);}catch(e){t=!0,r=e}finally{try{!i&&o.return&&o.return()}finally{if(t)throw r}}return c}(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")},_createClass=function(){function i(e,n){for(var c=0;c<n.length;c++){var i=n[c];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(e,n,c){return n&&i(e.prototype,n),c&&i(e,c),e}}(),_marked=regeneratorRuntime.mark(fib);function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}var FibonacciGeneratorMaker=function(){function e(){_classCallCheck(this,e),this.returnValue}return _createClass(e,[{key:"fibonacci",value:regeneratorRuntime.mark(function e(n,c){var i,t;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(i=this.makeFibonnaciBlock(n),this.placeFibonacciBlockOnPage(i,c),!(2<n)){e.next=5;break}return void(e.next=5);case 5:if(t=0,1!=n&&2!=n){e.next=10;break}t=1,e.next=14;break;case 10:return e.delegateYield(this.generateFibonacci(n-1,i),"t0",11);case 11:return t+=this.returnValue,e.delegateYield(this.generateFibonacci(n-2,i),"t1",13);case 13:t+=this.returnValue;case 14:return this.showFunctionHasResolved(t,i),e.next=17,t;case 17:case"end":return e.stop()}},e,this)})},{key:"generateFibonacci",value:regeneratorRuntime.mark(function e(n,c){var i,t,r;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:i=this.fibonacci(n,c),t=i.next(),r=void 0;case 3:if(t.done){e.next=10;break}return r=t.value,void(e.next=7);case 7:t=i.next(),e.next=3;break;case 10:this.returnValue=r;case 11:case"end":return e.stop()}},e,this)})},{key:"makeFibonnaciBlock",value:function(e){var n=document.createElement("div");return n.classList.add("fibonacci-block__child"),n.innerHTML='<div class="fibonacci-block">\n                                        <p class="fibonacci-block__function-name fibonacci-block__top-row">fib('+e+')</p>\n                                        <p class="fibonacci-block__return-value fibonacci-block__bottom-row">waiting</p>\n                                    </div>',n}},{key:"showFunctionHasResolved",value:function(e,n){var c=n.querySelector(".fibonacci-block__return-value"),i=n.querySelector(".fibonacci-block__function-name");c.innerHTML=e.toString(),c.classList.add("fibonacci-block__return-value--returned"),i.classList.add("fibonacci-block__function-name--resolved")}},{key:"placeFibonacciBlockOnPage",value:function(e,n){n.appendChild(e)}}]),e}();function fibonacciBlockMaker(e){var n=document.createElement("div");return n.classList.add("fibonacci-block__child"),n.innerHTML=1==e||2==e?'<div class="fibonacci-block">\n                                        <p class="fibonacci-block__function-name fibonacci-block__function-name--resolved fibonacci-block__top-row">fib('+e+')</p>\n                                        <p class="fibonacci-block__return-value fibonacci-block__return-value--returned fibonacci-block__bottom-row">1</p>\n                                    </div>':'<div class="fibonacci-block">\n                                        <p class="fibonacci-block__function-name fibonacci-block__top-row">fib('+e+')</p>\n                                        <p class="fibonacci-block__return-value fibonacci-block__bottom-row">waiting</p>\n                                    </div>',n}var fibonacciDemoContainer=document.querySelector(".fibonacci-demo"),fibonacciWrapper=document.querySelector(".fibonacci-wrapper");function fibonacci(r,t){return new Promise(function(i){setTimeout(function(){var e=void 0,n=(e=fibonacciDemoContainer.hasChildNodes()?fibonacciBlockMaker(r,!1):fibonacciBlockMaker(r,!0)).querySelector(".fibonacci-block__return-value"),c=e.querySelector(".fibonacci-block__function-name");t.append(e),i([e,n,c])},500)}).then(function(e){var n=_slicedToArray(e,3),c=n[0],i=n[1],t=n[2];return 1==r||2==r?new Promise(function(e){setTimeout(function(){e(1)},500)}):new Promise(function(e){e(fibonacci(r-1,c).then(function(n){return fibonacci(r-2,c).then(function(e){return[n,e]})}).then(function(e){var n=_slicedToArray(e,2);return n[0]+n[1]}))}).then(function(n){return new Promise(function(e){setTimeout(function(){i.innerHTML=n.toString(),i.classList.add("fibonacci-block__return-value--returned"),t.classList.add("fibonacci-block__function-name--resolved"),e(n)},500)})})})}function fib(n,c){var i,t,r,a,o,l,u,s,b,f;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(i=fibonacciBlockMaker(n),t=i.querySelector(".fibonacci-block__return-value"),r=i.querySelector(".fibonacci-block__function-name"),c.appendChild(i),!(2<n)){e.next=7;break}return void(e.next=7);case 7:if(a=0,1!=n&&2!=n){e.next=12;break}a=1,e.next=34;break;case 12:o=fib(n-1,i),l=o.next(),u=void 0;case 15:if(l.done){e.next=22;break}return u=l.value,void(e.next=19);case 19:l=o.next(),e.next=15;break;case 22:a+=u,s=fib(n-2,i),b=s.next(),f=void 0;case 26:if(b.done){e.next=33;break}return f=b.value,void(e.next=30);case 30:b=s.next(),e.next=26;break;case 33:a+=f;case 34:return t.innerHTML=a.toString(),t.classList.add("fibonacci-block__return-value--returned"),r.classList.add("fibonacci-block__function-name--resolved"),e.next=39,a;case 39:case"end":return e.stop()}},_marked,this)}function trial(e,n){setTimeout(function e(n,c){c&&c.done||(c=n.next(),setTimeout(e,300,n,c))},300,e,n)}var fibGeneratorMaker=new FibonacciGeneratorMaker,simulationController=document.querySelector(".simulation-controller"),startButton=document.querySelector(".simulation-controller__start-button"),simulationFunctionParameter=document.querySelector(".simulation-controller__function-parameter"),simulationDelay=document.querySelector(".simulation-controller__delay"),codePlayer=new CodePlayer(fibGeneratorMaker.fibonacci.bind(fibGeneratorMaker),simulationController,"fibonacci-demo");codePlayer.placeCodePlayerAtLocation(fibonacciWrapper),codePlayer.simluationStartButton.addEventListener("click",codePlayer.startFunction),codePlayer.simulationPlayPause.addEventListener("click",codePlayer.togglePlayPause),codePlayer.simulationPlayPause.addEventListener("click",codePlayer.playFunction),codePlayer.simulationStepper.addEventListener("click",codePlayer.step),fibonacciWrapper.scroll(4400,0);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
