"use strict";var _slicedToArray=function(n,c){if(Array.isArray(n))return n;if(Symbol.iterator in Object(n))return function(n,c){var i=[],o=!0,e=!1,r=void 0;try{for(var t,a=n[Symbol.iterator]();!(o=(t=a.next()).done)&&(i.push(t.value),!c||i.length!==c);o=!0);}catch(n){e=!0,r=n}finally{try{!o&&a.return&&a.return()}finally{if(e)throw r}}return i}(n,c);throw new TypeError("Invalid attempt to destructure non-iterable instance")};function fibonacciBlockMaker(n){var c=document.createElement("div");return c.classList.add("fibonacci-block__child"),c.innerHTML=1==n||2==n?'<div class="fibonacci-block">\n                                        <p class="fibonacci-block__function-name fibonacci-block__function-name--resolved fibonacci-block__top-row">fib('+n+')</p>\n                                        <p class="fibonacci-block__return-value fibonacci-block__return-value--returned fibonacci-block__bottom-row">1</p>\n                                    </div>':'<div class="fibonacci-block">\n                                        <p class="fibonacci-block__function-name fibonacci-block__top-row">fib('+n+')</p>\n                                        <p class="fibonacci-block__return-value fibonacci-block__bottom-row">waiting</p>\n                                    </div>',c}var fibonacciDemoContainer=document.querySelector(".fibonacci-demo"),fibonacciWrapper=document.querySelector(".fibonacci-wrapper");function fibonacci(r,e){return new Promise(function(o){setTimeout(function(){var n=void 0,c=(n=fibonacciDemoContainer.hasChildNodes()?fibonacciBlockMaker(r,!1):fibonacciBlockMaker(r,!0)).querySelector(".fibonacci-block__return-value"),i=n.querySelector(".fibonacci-block__function-name");e.append(n),o([n,c,i])},500)}).then(function(n){var c=_slicedToArray(n,3),i=c[0],o=c[1],e=c[2];return 1==r||2==r?new Promise(function(n){setTimeout(function(){n(1)},500)}):new Promise(function(n){n(fibonacci(r-1,i).then(function(c){return fibonacci(r-2,i).then(function(n){return[c,n]})}).then(function(n){var c=_slicedToArray(n,2);return c[0]+c[1]}))}).then(function(c){return new Promise(function(n){setTimeout(function(){o.innerHTML=c.toString(),o.classList.add("fibonacci-block__return-value--returned"),e.classList.add("fibonacci-block__function-name--resolved"),n(c)},500)})})})}fibonacciWrapper.scroll(4400,0),fibonacci(7,fibonacciDemoContainer);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpYm9uYWNjaS5qcyJdLCJuYW1lcyI6WyJmaWJvbmFjY2lCbG9ja01ha2VyIiwibiIsImZpYm9uYWNjaUJsb2NrIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiZmlib25hY2NpV3JhcHBlciIsImlubmVySFRNTCIsImNsYXNzTGlzdCIsImZpYm9uYWNjaURlbW9Db250YWluZXIiLCJwYXJlbnRET01SZWYiLCJxdWVyeVNlbGVjdG9yIiwicmVzb2x2ZSIsImZpYm9uYWNjaSIsIlByb21pc2UiLCJmdW5jdGlvblZhbHVlVGV4dCIsInNldFRpbWVvdXQiLCJmdW5jdGlvbk5hbWVCbG9jayIsInRoZW4iLCJfcmVmIiwiX3JlZjIiLCJfc2xpY2VkVG9BcnJheSIsInZhbDEiLCJ2YWwyIiwiX3JlZjMiLCJfcmVmNCIsInZhbHVlIiwidG9TdHJpbmciLCJhZGQiXSwibWFwcGluZ3MiOiJBQUFBLDRhQUVBLFNBQVNBLG9CQUFvQkMsR0FDekIsSUFBSUMsRUFBaUJDLFNBQVNDLGNBQWMsT0FtQjFDQyxPQXBCTkgsRUFBU0YsVUFBb0JDLElBQUcsMEJBS3hCQyxFQUFlSSxVQUhuQkosR0FBQUEsR0FBZUssR0FBZkwsRUFHSSwwTEFEa0JELEVBQ2xCLGdOQVNILGlKQUg0R0EsRUFHNUcsOEtBTUNJLEVBR04sSUFBQUcsdUJBQXNCQyxTQUFjQyxjQUFBLG1CQUNoQ0wsaUJBQW1CRixTQUFDUSxjQUFZLHNCQUd4QixTQUFBQyxVQUFLSixFQUFBQSxHQUVMLE9BQUEsSUFBQUssUUFBSUMsU0FBQUEsR0FDSkMsV0FBSUMsV0FDSlAsSUFBQUEsT0FBQUEsRUFHQUssR0FUSlosRUFPSVMsdUJBQXlCRyxnQkFQN0JkLG9CQUFBQyxHQUFBLEdBT0lELG9CQUFBQyxHQUFBLElBRTREUyxjQUFBLGtDQUFBTSxFQUFBZCxFQUFBUSxjQUFBLG1DQUExRFIsRUFBQUEsT0FBMERBLEdBQTFDWSxFQUFBQSxDQUFBQSxFQUEwQ0EsRUFBQUUsS0FBQSxPQUFqRUMsS0FBSyxTQUFBQyxHQUE0RCxJQUFBQyxFQUFBQyxlQUFBRixFQUFBLEdBQTFEaEIsRUFBMERpQixFQUFBLEdBQTFDTCxFQUEwQ0ssRUFBQSxHQUF2QkgsRUFBdUJHLEVBQUEsR0FDaEUsT0FBUyxHQUFMbEIsR0FBZSxHQUFMQSxFQUNILElBQUlZLFFBQVEsU0FBQUYsR0FDZkksV0FBVyxXQUNQSixFQUFRLElBQ1QsT0FHQSxJQUFJRSxRQUFRLFNBQUFGLEdBRWtDQSxFQURyQ0MsVUFBVVgsRUFBSSxFQUFHQyxHQUFnQmUsS0FBSyxTQUFBSSxHQUM5QyxPQUFPVCxVQUFVWCxFQUFJLEVBQUdDLEdBQWdCZSxLQUFLLFNBQUFLLEdBQUEsTUFBQ0EsQ0FBQUEsRUFBREEsT0FBQUwsS0FBQSxTQUFBTSxHQUFBLElBQUFDLEVBQUFKLGVBQUFHLEVBQUEsR0FBQSxPQUFBQyxFQUFBLEdBQUFBLEVBQUEsUUFDaERQLEtBQUVBLFNBQUFBLEdBQUssT0FBQSxJQUFBSixRQUFBLFNBQUFGLEdBQUFJLFdBQUEsV0FBUU8sRUFBUmhCLFVBQUFtQixFQUFBQyxXQU1BWixFQUFrQlAsVUFBVW9CLElBQUksMkNBTmhDWCxFQUFBVCxVQUFBb0IsSUFBQSw0Q0FGUmhCLEVBQUFjLElBR0FkLFdBckJSSSxpQkFBQUEsT0FBVyxLQUFBLEdBNEJLSixVQUFBQSxFQUFBQSIsImZpbGUiOiJmaWJvbmFjY2kubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuZnVuY3Rpb24gZmlib25hY2NpQmxvY2tNYWtlcihuKSB7XHJcbiAgICBsZXQgZmlib25hY2NpQmxvY2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGZpYm9uYWNjaUJsb2NrLmNsYXNzTGlzdC5hZGQoJ2ZpYm9uYWNjaS1ibG9ja19fY2hpbGQnKTtcclxuXHJcbiAgICBpZiAobiA9PSAxIHx8IG4gPT0gMikge1xyXG4gICAgICAgIGZpYm9uYWNjaUJsb2NrLmlubmVySFRNTCA9IGA8ZGl2IGNsYXNzPVwiZmlib25hY2NpLWJsb2NrXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cImZpYm9uYWNjaS1ibG9ja19fZnVuY3Rpb24tbmFtZSBmaWJvbmFjY2ktYmxvY2tfX2Z1bmN0aW9uLW5hbWUtLXJlc29sdmVkIGZpYm9uYWNjaS1ibG9ja19fdG9wLXJvd1wiPmZpYigke259KTwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwiZmlib25hY2NpLWJsb2NrX19yZXR1cm4tdmFsdWUgZmlib25hY2NpLWJsb2NrX19yZXR1cm4tdmFsdWUtLXJldHVybmVkIGZpYm9uYWNjaS1ibG9ja19fYm90dG9tLXJvd1wiPjE8L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PmBcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZmlib25hY2NpQmxvY2suaW5uZXJIVE1MID0gYDxkaXYgY2xhc3M9XCJmaWJvbmFjY2ktYmxvY2tcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwiZmlib25hY2NpLWJsb2NrX19mdW5jdGlvbi1uYW1lIGZpYm9uYWNjaS1ibG9ja19fdG9wLXJvd1wiPmZpYigke259KTwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwiZmlib25hY2NpLWJsb2NrX19yZXR1cm4tdmFsdWUgZmlib25hY2NpLWJsb2NrX19ib3R0b20tcm93XCI+d2FpdGluZzwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+YFxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBmaWJvbmFjY2lCbG9jaztcclxufVxyXG5cclxuY29uc3QgZmlib25hY2NpRGVtb0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5maWJvbmFjY2ktZGVtbycpO1xyXG5jb25zdCBmaWJvbmFjY2lXcmFwcGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZpYm9uYWNjaS13cmFwcGVyJyk7XHJcbmZpYm9uYWNjaVdyYXBwZXIuc2Nyb2xsKDQ0MDAsIDApO1xyXG5cclxuZnVuY3Rpb24gZmlib25hY2NpKG4sIHBhcmVudERPTVJlZikge1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XHJcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBmaWJvbmFjY2lCbG9jaztcclxuICAgICAgICAgICAgaWYgKCFmaWJvbmFjY2lEZW1vQ29udGFpbmVyLmhhc0NoaWxkTm9kZXMoKSkgZmlib25hY2NpQmxvY2sgPSBmaWJvbmFjY2lCbG9ja01ha2VyKG4sIHRydWUpO1xyXG4gICAgICAgICAgICBlbHNlIGZpYm9uYWNjaUJsb2NrID0gZmlib25hY2NpQmxvY2tNYWtlcihuLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIGxldCBmdW5jdGlvblZhbHVlVGV4dCA9IGZpYm9uYWNjaUJsb2NrLnF1ZXJ5U2VsZWN0b3IoJy5maWJvbmFjY2ktYmxvY2tfX3JldHVybi12YWx1ZScpO1xyXG4gICAgICAgICAgICBsZXQgZnVuY3Rpb25OYW1lQmxvY2sgPSBmaWJvbmFjY2lCbG9jay5xdWVyeVNlbGVjdG9yKCcuZmlib25hY2NpLWJsb2NrX19mdW5jdGlvbi1uYW1lJyk7XHJcbiAgICAgICAgICAgIHBhcmVudERPTVJlZi5hcHBlbmQoZmlib25hY2NpQmxvY2spO1xyXG4gICAgICAgICAgICByZXNvbHZlKFtmaWJvbmFjY2lCbG9jaywgZnVuY3Rpb25WYWx1ZVRleHQsIGZ1bmN0aW9uTmFtZUJsb2NrXSk7XHJcbiAgICAgICAgfSwgNTAwKTtcclxuICAgIH0pLnRoZW4oKFtmaWJvbmFjY2lCbG9jaywgZnVuY3Rpb25WYWx1ZVRleHQsIGZ1bmN0aW9uTmFtZUJsb2NrXSkgPT4ge1xyXG4gICAgICAgIGlmIChuID09IDEgfHwgbiA9PSAyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgxKTtcclxuICAgICAgICAgICAgICAgIH0sIDUwMCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgbGV0IHZhbHVlID0gZmlib25hY2NpKG4gLSAxLCBmaWJvbmFjY2lCbG9jaykudGhlbigodmFsMSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmaWJvbmFjY2kobiAtIDIsIGZpYm9uYWNjaUJsb2NrKS50aGVuKCh2YWwyKSA9PiBbdmFsMSwgdmFsMl0pO1xyXG4gICAgICAgICAgICAgICAgfSkudGhlbigoW3ZhbDEsIHZhbDJdKSA9PiB2YWwxICsgdmFsMik7XHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKHZhbHVlKTtcclxuICAgICAgICAgICAgfSkudGhlbigodmFsdWUpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvblZhbHVlVGV4dC5pbm5lckhUTUwgPSB2YWx1ZS50b1N0cmluZygpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvblZhbHVlVGV4dC5jbGFzc0xpc3QuYWRkKCdmaWJvbmFjY2ktYmxvY2tfX3JldHVybi12YWx1ZS0tcmV0dXJuZWQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb25OYW1lQmxvY2suY2xhc3NMaXN0LmFkZCgnZmlib25hY2NpLWJsb2NrX19mdW5jdGlvbi1uYW1lLS1yZXNvbHZlZCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHZhbHVlKTtcclxuICAgICAgICAgICAgICAgICAgICB9LCA1MDApO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICB9KVxyXG59XHJcblxyXG5maWJvbmFjY2koNywgZmlib25hY2NpRGVtb0NvbnRhaW5lcikiXX0=
