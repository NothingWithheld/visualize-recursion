/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */@import url("https://fonts.googleapis.com/css?family=Ubuntu+Mono");html{-webkit-text-size-adjust:100%;line-height:1.15}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{-webkit-text-decoration:underline dotted;border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}body,html{margin:0}.main-nav{background-color:#2f3542;margin-bottom:50px;padding:25px 0;width:100%}.main-nav__pages{margin:0;padding:0}.main-nav__page{align-items:center;display:flex;height:40px;justify-content:center;list-style-type:none}.main-nav__page-link{color:#fff;font-family:Ubuntu Mono,monospace;font-size:24px;text-decoration:none}@media screen and (min-width:768px){.main-nav{-webkit-transform:translate(-50%);left:50%;position:relative;transform:translate(-50%);width:768px}}.icon--gray{fill:#bcccdc}.icon--white{fill:#fff}.code-controller{-webkit-transform:translateX(-50%);align-items:center;display:flex;height:100px;justify-content:space-between;left:50%;position:relative;transform:translateX(-50%);width:1200px}.code-controller__button-controls{display:flex}.code-player__button{-moz-appearance:none;-webkit-appearance:none;align-items:center;appearance:none;background:#fff;border:2px solid;border-radius:4px;cursor:pointer;display:flex;font-size:25px;height:50px;justify-content:center;margin:0 20px 0 0;overflow:hidden;text-transform:uppercase;width:150px}.code-player__button--unclickable{border-color:#bcccdc}.code-player__play-button{border-color:#0c6b58}.code-player__pause-button,.code-player__reset-button{border-color:#ab091e}.code-player__step-button{border-color:#de911d}.code-player__icon-pause,.code-player__icon-play,.code-player__icon-reset,.code-player__icon-step{height:35px}.code-player__icon-play--colored{fill:#0c6b58}.code-player__icon-pause--colored,.code-player__icon-reset--colored{fill:#ab091e}.code-player__icon-step--colored{fill:#de911d}.factorial-demo{-webkit-transform:translateX(-50%);align-items:center;border:solid #000;display:flex;flex-direction:column-reverse;height:600px;left:50%;position:relative;transform:translateX(-50%);width:600px}.factorial-block{background-color:#000;color:#fff;display:flex;height:150px;justify-content:space-between;width:300px}.factorial-block__value-container{background-color:#fff;color:#000;height:100px;margin:auto 0;width:100px}.factorial-block__text{font-size:30px}.factorial-block--new{display:grid;font-family:Ubuntu Mono,monospace;grid-template-areas:"call-type equivalent return-header" "function-name equivalent-value return-value";grid-template-columns:3fr 3fr 2fr;grid-template-rows:2fr 3fr;height:100px;margin:5px 0;width:500px}.factorial-block__initial-call{height:110px;width:550px}.factorial-block__call-type{background-color:#dfe4ea;grid-area:call-type}.factorial-block__function-name{background-color:#f1f2f6;grid-area:function-name}.factorial-block__equivalent{background-color:#a4b0be;grid-area:equivalent}.factorial-block__equivalent-value{background-color:#ced6e0;grid-area:equivalent-value}.factorial-block__return-header{background-color:#2ed573;grid-area:return-header}.factorial-block__return-value{background-color:#000;color:#eccc68;grid-area:return-value}.factorial-block__return-value--returned{color:#2ed573}.factorial-block__top-row{font-weight:700}.factorial-block__bottom-row,.factorial-block__top-row{align-items:center;display:flex;font-size:18px;justify-content:center}.factorial-block__bottom-row{font-weight:400;margin:0}.fibonacci-demo{align-items:center;display:flex;flex-direction:column;height:1000px;overflow:scroll;width:10000px}.fibonacci-wrapper{-webkit-transform:translateX(-50%);border:solid #000;height:600px;left:50%;overflow:scroll;position:relative;transform:translateX(-50%);width:1200px}.fibonacci-block{border-radius:100%;height:60px;margin:0 auto;overflow:hidden;width:60px}.fibonacci-block__function-name{background-color:#eccc68;margin:0;padding:8px 0 3px}.fibonacci-block__function-name--resolved{background-color:#2ed573}.fibonacci-block__return-value{background-color:#000;color:#eccc68;height:30px;padding-top:3px}.fibonacci-block__return-value--returned{color:#2ed573}.fibonacci-block__top-row{display:flex;font-size:14px;font-weight:700;justify-content:center}.fibonacci-block__bottom-row{display:flex;font-size:14px;font-weight:400;justify-content:center;margin:0}.fibonacci-block__child{display:inline-block;margin:5px;vertical-align:top}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
